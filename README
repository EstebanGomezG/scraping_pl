üìú Proyecto de Ley Scraper
Este script se encarga de hacer scraping de proyectos de ley espec√≠ficos en el sitio web del Senado de Colombia, usando Selenium para automatizar Chrome. Est√° pensado para encontrar y extraer informaci√≥n relevante sobre proyectos de ley filtrados con una palabra clave, en este caso, "Omar%Restrepo".

üöÄ Requisitos
Python 3.x
Selenium: para manejar el navegador.
Pandas: para organizar y guardar los datos.
Webdriver Manager para Chrome: nos facilita el uso de chromedriver sin descargarlo manualmente.
Instala los requisitos con:

bash
Copiar c√≥digo
pip install selenium pandas webdriver-manager
üõ†Ô∏è C√≥mo funciona
Configura el Navegador: Usamos ChromeDriverManager para manejar la instalaci√≥n del driver de Chrome.
Automatiza el Proceso: Abrimos el navegador, ingresamos al sitio de proyectos de ley, buscamos usando la palabra clave, ajustamos la cantidad de resultados, y capturamos los datos.
Extrae los Datos: Captura el enlace, fecha de radicaci√≥n, autor y estado de comisi√≥n de cada proyecto que aparece en la b√∫squeda.
Guarda en CSV: Toda la informaci√≥n se organiza y se guarda en un archivo .csv llamado PL_Omar.csv para facilitar el an√°lisis posterior.
üíª Uso
Ejecuta el script desde la terminal con:

bash
Copiar c√≥digo
python Scrapping_PL_2024.py
El archivo PL_Omar.csv se generar√° en el directorio actual, conteniendo todos los resultados filtrados de la b√∫squeda.

‚ö†Ô∏è Notas
Este script utiliza time.sleep() para hacer pausas en la navegaci√≥n y permitir que los elementos carguen. Si notas problemas de velocidad o carga de datos, podr√≠as ajustar estos tiempos.
Aseg√∫rate de revisar la estructura del sitio regularmente, ya que cambios en la estructura HTML podr√≠an afectar el funcionamiento del script.
¬°Listo para automatizar y analizar proyectos de ley como un pro! üé©